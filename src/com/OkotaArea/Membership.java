/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.OkotaArea;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author chinex
 */
public class Membership extends javax.swing.JPanel {

    /**
     * Creates new form Membership
     */
    private final HomeFront front; 
    private final HomePanel  home;
    SubPanelUpdater w = new SubPanelUpdater(this);
    DBOperations db = new DBOperations();
    Map <String, String> rt;
    public Membership(HomeFront front,HomePanel home) {
        initComponents();
        this.front = front;
        this.home = home;
        NewMemberRegPanel.setVisible(false);
        updateMemberRegPanel.setVisible(false);
        AllAreaMembersPanel.setVisible(false);
        ViewAreamemberPanel.setVisible(false);
        EditmembertSaveNOTEButton.setVisible(false);
        editMemNOTETextArea.setVisible(false);
        memdataScrollPane.setVisible(false);
        textCustomise("Enter First Name", memFirstNameTf);
        textCustomise("Enter Last Name", memLastNameTf);
        textCustomise("Enter Phone Number ", memPhoneNumberTF);
        textCustomise("Enter Cell Jurisdiction", memHomeCellJurisdiction);
        textCustomise("Enter Address", memAddress);
        textCustomise("Enter Email Address", mememailAddress);
        textCustomise("Enter First Name", updatememFirstNameTf);
        textCustomise("Enter Last Name", updatememLastNameTf);
        textCustomise("Enter Phone Number ", updatememPhoneNumberTF);
        textCustomise("Enter Cell Jurisdiction", updatememHomeCellJurisdiction);
        textCustomise("Enter Email Address", updatememAddress);
        textCustomise("Enter Address", updatemememailAddress);
        textCustomise("PHONE NUMBER", memphnumsearchTF);
        textCustomise("FIRST NAME", memfnamesearchTF);
        textCustomise("LAST NAME", memlnamesearchTF);
        textCustomise1("Make A Short Note Of Your Follow Up Progress On Member", editMemNOTETextArea);
        
    JScrollPane scroll = new JScrollPane (home);
    scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    MembershipHomepanel.add(scroll);   
    }
    private void textCustomise(String text, JTextField component)
    {
        PromptSupport.setPrompt(text, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, component);
        PromptSupport.setFontStyle(Font.BOLD, component);
        PromptSupport.setForeground(Color.darkGray, component);
    }
    private void textCustomise1(String text, JTextArea component)
    {
        PromptSupport.setPrompt(text, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, component);
        PromptSupport.setFontStyle(Font.BOLD, component);
        PromptSupport.setForeground(Color.darkGray, component);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        MembershipHomepanel = new javax.swing.JPanel();
        ViewMemberLabel = new javax.swing.JLabel();
        NewMemberLabel = new javax.swing.JLabel();
        AllMemberLabel = new javax.swing.JLabel();
        membershipBackbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        ArchievedMemberLabel = new javax.swing.JLabel();
        BackgroundPanel = new javax.swing.JPanel();
        NewMemberRegPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        memFirstNameTf = new javax.swing.JTextField();
        memLastNameTf = new javax.swing.JTextField();
        memHomeCellJurisdiction = new javax.swing.JTextField();
        memPhoneNumberTF = new javax.swing.JTextField();
        memAddress = new javax.swing.JTextField();
        gender = new javax.swing.JLabel();
        memmaleRadioButton = new javax.swing.JRadioButton();
        memfemaleRadioButton = new javax.swing.JRadioButton();
        gender1 = new javax.swing.JLabel();
        memMarriedRadioButton = new javax.swing.JRadioButton();
        memSingleRadioButton = new javax.swing.JRadioButton();
        memdcabasicDateChooser = new com.toedter.calendar.JDateChooser();
        memdcamaturityDateChooser = new com.toedter.calendar.JDateChooser();
        memMvpDateChooser = new com.toedter.calendar.JDateChooser();
        memencounterDateChooser = new com.toedter.calendar.JDateChooser();
        memdliDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        membirthMonthChooser = new com.toedter.calendar.JMonthChooser();
        memBirthDayChooser = new com.toedter.calendar.JDayChooser();
        NewMemberSaveButton = new javax.swing.JButton();
        mememailAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        AllAreaMembersPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        AllareamemberTable = new javax.swing.JTable();
        memberbirthdayCombobox = new javax.swing.JComboBox();
        sendmessageCombobox = new javax.swing.JComboBox();
        viewAllmemberLabel = new javax.swing.JLabel();
        ViewAreamemberPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ViewareamemberTable = new javax.swing.JTable();
        EditmembertSaveNOTEButton = new javax.swing.JButton();
        viewMemberSearchButton = new javax.swing.JButton();
        memphnumsearchTF = new javax.swing.JTextField();
        memfnamesearchRadioButton = new javax.swing.JRadioButton();
        memfnamesearchTF = new javax.swing.JTextField();
        memfnameerrorimage = new javax.swing.JLabel();
        memfnameerrorlabel = new javax.swing.JLabel();
        memphnumerrorlabel = new javax.swing.JLabel();
        memphnumsearchRadioButton = new javax.swing.JRadioButton();
        entermemberNumberlabel2 = new javax.swing.JLabel();
        memphnumerrorimage = new javax.swing.JLabel();
        entermemberNumberlabel3 = new javax.swing.JLabel();
        memlnamesearchRadioButton = new javax.swing.JRadioButton();
        memlnamesearchTF = new javax.swing.JTextField();
        memlnameerrorlabel = new javax.swing.JLabel();
        memlnameerrorimage = new javax.swing.JLabel();
        viewmemComboBox = new javax.swing.JComboBox();
        memdataScrollPane = new javax.swing.JScrollPane();
        editMemNOTETextArea = new javax.swing.JTextArea();
        memtexterrorlabelLabel = new javax.swing.JLabel();
        updateMemberRegPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        updatememFirstNameTf = new javax.swing.JTextField();
        updatememLastNameTf = new javax.swing.JTextField();
        updatememHomeCellJurisdiction = new javax.swing.JTextField();
        updatememPhoneNumberTF = new javax.swing.JTextField();
        updatememAddress = new javax.swing.JTextField();
        gender2 = new javax.swing.JLabel();
        updatememmaleRadioButton = new javax.swing.JRadioButton();
        updatememfemaleRadioButton = new javax.swing.JRadioButton();
        gender3 = new javax.swing.JLabel();
        updatememMarriedRadioButton = new javax.swing.JRadioButton();
        updatememSingleRadioButton = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        updatemembirthMonthChooser = new com.toedter.calendar.JMonthChooser();
        updatememBirthDayChooser = new com.toedter.calendar.JDayChooser();
        updatememberdataSavebutton = new javax.swing.JButton();
        updatemememailAddress = new javax.swing.JTextField();

        setBackground(new java.awt.Color(146, 198, 227));
        setPreferredSize(new java.awt.Dimension(990, 690));

        jScrollPane1.setAutoscrolls(true);

        ViewMemberLabel.setBackground(new java.awt.Color(51, 51, 51));
        ViewMemberLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        ViewMemberLabel.setForeground(new java.awt.Color(51, 51, 51));
        ViewMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewMemberLabel.setText("View Member");
        ViewMemberLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewMemberLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMemberLabelMouseEntered(evt);
            }
        });

        NewMemberLabel.setBackground(new java.awt.Color(51, 51, 51));
        NewMemberLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        NewMemberLabel.setForeground(new java.awt.Color(51, 51, 51));
        NewMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NewMemberLabel.setText("New Member");
        NewMemberLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewMemberLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMemberLabelMouseEntered(evt);
            }
        });

        AllMemberLabel.setBackground(new java.awt.Color(51, 51, 51));
        AllMemberLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        AllMemberLabel.setForeground(new java.awt.Color(51, 51, 51));
        AllMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AllMemberLabel.setText("All Members");
        AllMemberLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllMemberLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMemberLabelMouseEntered(evt);
            }
        });

        membershipBackbutton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        membershipBackbutton.setText("BACK");
        membershipBackbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membershipBackbuttonActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/OkotaArea/logo smallsma.png"))); // NOI18N
        jLabel1.setToolTipText("");

        ArchievedMemberLabel.setBackground(new java.awt.Color(51, 51, 51));
        ArchievedMemberLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        ArchievedMemberLabel.setForeground(new java.awt.Color(51, 51, 51));
        ArchievedMemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ArchievedMemberLabel.setText("Archived Members");
        ArchievedMemberLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ArchievedMemberLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMemberLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout MembershipHomepanelLayout = new javax.swing.GroupLayout(MembershipHomepanel);
        MembershipHomepanel.setLayout(MembershipHomepanelLayout);
        MembershipHomepanelLayout.setHorizontalGroup(
            MembershipHomepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMemberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ViewMemberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator4)
            .addComponent(AllMemberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator5)
            .addGroup(MembershipHomepanelLayout.createSequentialGroup()
                .addGroup(MembershipHomepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MembershipHomepanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MembershipHomepanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(membershipBackbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(ArchievedMemberLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        MembershipHomepanelLayout.setVerticalGroup(
            MembershipHomepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MembershipHomepanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NewMemberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(ViewMemberLabel)
                .addGap(27, 27, 27)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AllMemberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ArchievedMemberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(membershipBackbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );

        BackgroundPanel.setBackground(new java.awt.Color(146, 198, 227));

        NewMemberRegPanel.setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        memFirstNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        memLastNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        memHomeCellJurisdiction.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        memPhoneNumberTF.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        memAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        gender.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender.setText("Gender");

        memmaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(memmaleRadioButton);
        memmaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memmaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        memmaleRadioButton.setText("Male");

        memfemaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(memfemaleRadioButton);
        memfemaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memfemaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        memfemaleRadioButton.setText("Female");

        gender1.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender1.setText("Marital Status");

        memMarriedRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(memMarriedRadioButton);
        memMarriedRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memMarriedRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        memMarriedRadioButton.setText("Married");
        memMarriedRadioButton.setToolTipText("");

        memSingleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(memSingleRadioButton);
        memSingleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memSingleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        memSingleRadioButton.setText("Single");
        memSingleRadioButton.setToolTipText("");

        memdcabasicDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        memdcamaturityDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        memMvpDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        memencounterDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        memdliDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel3.setText("ENTER DCA BASIC GRADUATE DATE");

        jLabel4.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel4.setText("ENTER MVP DATE");

        jLabel5.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel5.setText("BIRTHDAY");

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel6.setText("ENTER ENCOUNTER ATTENDED DATE");

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel7.setText("ENTER DLI GRADUATE DATE");

        jLabel8.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel8.setText("ENTER MATURITY GRADUATE DATE");

        membirthMonthChooser.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        NewMemberSaveButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        NewMemberSaveButton.setText("SAVE");
        NewMemberSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewMemberSaveButtonActionPerformed(evt);
            }
        });

        mememailAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(gender)
                                .addGap(55, 55, 55)
                                .addComponent(memmaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(memfemaleRadioButton))
                            .addComponent(memdcabasicDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(memdcamaturityDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(memencounterDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(memdliDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(memHomeCellJurisdiction))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(gender1)
                                .addGap(46, 46, 46)
                                .addComponent(memMarriedRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addComponent(memSingleRadioButton)
                                .addGap(66, 66, 66))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(mememailAddress))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(memMvpDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(memBirthDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(membirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(64, 64, 64))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(memFirstNameTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(memPhoneNumberTF, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(memLastNameTf))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(memAddress)))))
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(NewMemberSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memPhoneNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mememailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memfemaleRadioButton)
                    .addComponent(memmaleRadioButton)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender1)
                    .addComponent(memMarriedRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memSingleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(memMvpDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(memdcabasicDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(memdcamaturityDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(memencounterDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memdliDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memBirthDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(membirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(NewMemberSaveButton)
                .addGap(84, 84, 84))
        );

        javax.swing.GroupLayout NewMemberRegPanelLayout = new javax.swing.GroupLayout(NewMemberRegPanel);
        NewMemberRegPanel.setLayout(NewMemberRegPanelLayout);
        NewMemberRegPanelLayout.setHorizontalGroup(
            NewMemberRegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        NewMemberRegPanelLayout.setVerticalGroup(
            NewMemberRegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/OkotaArea/DC Wallpaper101.png"))); // NOI18N

        AllareamemberTable.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        AllareamemberTable.setForeground(new java.awt.Color(51, 51, 51));
        AllareamemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Phone No", "Email", "Address", "Cell Jurisdiction", "Gender", "Marital Status", "Birthday", "Mvp date", "2nd Time", "DCA Basic", "Maturity", "Encounter", "DLI", "Department"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(AllareamemberTable);

        memberbirthdayCombobox.setBackground(new java.awt.Color(204, 204, 204));
        memberbirthdayCombobox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        memberbirthdayCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Birthday Celebrants", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        memberbirthdayCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberbirthdayComboboxActionPerformed(evt);
            }
        });

        sendmessageCombobox.setBackground(new java.awt.Color(204, 204, 204));
        sendmessageCombobox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        sendmessageCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Generate Contact Details", "Generate Email(s)", "Generate Phone Number(s)", "Generate Number with name", "Generate Email with name", " ", " " }));
        sendmessageCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendmessageComboboxActionPerformed(evt);
            }
        });

        viewAllmemberLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        viewAllmemberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout AllAreaMembersPanelLayout = new javax.swing.GroupLayout(AllAreaMembersPanel);
        AllAreaMembersPanel.setLayout(AllAreaMembersPanelLayout);
        AllAreaMembersPanelLayout.setHorizontalGroup(
            AllAreaMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 965, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllAreaMembersPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(AllAreaMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllAreaMembersPanelLayout.createSequentialGroup()
                        .addComponent(memberbirthdayCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllAreaMembersPanelLayout.createSequentialGroup()
                        .addComponent(sendmessageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllAreaMembersPanelLayout.createSequentialGroup()
                        .addComponent(viewAllmemberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136))))
        );
        AllAreaMembersPanelLayout.setVerticalGroup(
            AllAreaMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllAreaMembersPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(viewAllmemberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memberbirthdayCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendmessageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 103, Short.MAX_VALUE))
        );

        ViewareamemberTable.setBackground(new java.awt.Color(51, 51, 51));
        ViewareamemberTable.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        ViewareamemberTable.setForeground(new java.awt.Color(255, 255, 255));
        ViewareamemberTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First  Name", "Last Name", "Phone No", "Email", "Address", "Cell Jurisdiction", "Gender", "Marital Status", "Birthday", "Mvp date", "2nd Time", "DCA Basic", "Maturity", "Encounter", "DLI", "Department", "FollowupNote"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(ViewareamemberTable);

        EditmembertSaveNOTEButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        EditmembertSaveNOTEButton.setText("SAVE");
        EditmembertSaveNOTEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditmembertSaveNOTEButtonActionPerformed(evt);
            }
        });

        viewMemberSearchButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        viewMemberSearchButton.setText("SEARCH");
        viewMemberSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMemberSearchButtonActionPerformed(evt);
            }
        });

        memphnumsearchTF.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        memphnumsearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                memphnumsearchTFFocusGained(evt);
            }
        });

        buttonGroup3.add(memfnamesearchRadioButton);
        memfnamesearchRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memfnamesearchRadioButton.setText("Search with Member's First Name");

        memfnamesearchTF.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        memfnamesearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                memfnamesearchTFFocusLost(evt);
            }
        });

        memfnameerrorimage.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        memfnameerrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        memphnumerrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        buttonGroup3.add(memphnumsearchRadioButton);
        memphnumsearchRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memphnumsearchRadioButton.setText("Search with Member's Phone Number");

        entermemberNumberlabel2.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        entermemberNumberlabel2.setText("OR");

        memphnumerrorimage.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        entermemberNumberlabel3.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        entermemberNumberlabel3.setText("OR");

        buttonGroup3.add(memlnamesearchRadioButton);
        memlnamesearchRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        memlnamesearchRadioButton.setText("Search with Member's Last Name");

        memlnamesearchTF.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        memlnamesearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                memlnamesearchTFFocusLost(evt);
            }
        });

        memlnameerrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        memlnameerrorimage.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        viewmemComboBox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        viewmemComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Update Bio-Data", "Make Follow-Up Note", "View Follow-Up Note", "Move To Archive", " " }));
        viewmemComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewmemComboBoxActionPerformed(evt);
            }
        });

        editMemNOTETextArea.setColumns(10);
        editMemNOTETextArea.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        editMemNOTETextArea.setRows(3);
        editMemNOTETextArea.setTabSize(2);
        memdataScrollPane.setViewportView(editMemNOTETextArea);

        memtexterrorlabelLabel.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        javax.swing.GroupLayout ViewAreamemberPanelLayout = new javax.swing.GroupLayout(ViewAreamemberPanel);
        ViewAreamemberPanel.setLayout(ViewAreamemberPanelLayout);
        ViewAreamemberPanelLayout.setHorizontalGroup(
            ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addComponent(memfnamesearchRadioButton)
                        .addGap(18, 18, 18)
                        .addComponent(entermemberNumberlabel2))
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addComponent(memfnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memfnameerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(memfnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(entermemberNumberlabel3)
                        .addGap(31, 31, 31))
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(memphnumerrorlabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewAreamemberPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(memphnumsearchRadioButton)
                                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                                        .addComponent(memphnumsearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(memphnumerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memlnameerrorlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewAreamemberPanelLayout.createSequentialGroup()
                        .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memlnamesearchRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                                .addComponent(memlnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(memlnameerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addComponent(jScrollPane8)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewAreamemberPanelLayout.createSequentialGroup()
                .addComponent(memtexterrorlabelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(viewMemberSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EditmembertSaveNOTEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memdataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(viewmemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        ViewAreamemberPanelLayout.setVerticalGroup(
            ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(memfnamesearchRadioButton)
                            .addComponent(memphnumsearchRadioButton)
                            .addComponent(entermemberNumberlabel3)
                            .addComponent(entermemberNumberlabel2)
                            .addComponent(memlnamesearchRadioButton))
                        .addGap(33, 33, 33)
                        .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(memfnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(memfnameerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(memfnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewAreamemberPanelLayout.createSequentialGroup()
                                        .addComponent(memphnumsearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                                        .addComponent(memphnumerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(memphnumerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ViewAreamemberPanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memlnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(memlnameerrorimage, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memlnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewMemberSearchButton)
                    .addComponent(memtexterrorlabelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(ViewAreamemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewmemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memdataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EditmembertSaveNOTEButton)
                .addGap(80, 80, 80))
        );

        updateMemberRegPanel.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        updatememFirstNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        updatememLastNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        updatememHomeCellJurisdiction.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        updatememPhoneNumberTF.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        updatememAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        gender2.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender2.setText("Gender");

        updatememmaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(updatememmaleRadioButton);
        updatememmaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        updatememmaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        updatememmaleRadioButton.setText("Male");

        updatememfemaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(updatememfemaleRadioButton);
        updatememfemaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        updatememfemaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        updatememfemaleRadioButton.setText("Female");

        gender3.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender3.setText("Marital Status");

        updatememMarriedRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(updatememMarriedRadioButton);
        updatememMarriedRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        updatememMarriedRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        updatememMarriedRadioButton.setText("Married");
        updatememMarriedRadioButton.setToolTipText("");

        updatememSingleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(updatememSingleRadioButton);
        updatememSingleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        updatememSingleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        updatememSingleRadioButton.setText("Single");
        updatememSingleRadioButton.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel11.setText("BIRTHDAY");

        updatememberdataSavebutton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        updatememberdataSavebutton.setText("SAVE");
        updatememberdataSavebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatememberdataSavebuttonActionPerformed(evt);
            }
        });

        updatemememailAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(gender2)
                        .addGap(44, 44, 44)
                        .addComponent(updatememmaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(updatememfemaleRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addComponent(gender3)
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatememberdataSavebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(updatememMarriedRadioButton)
                                .addGap(56, 56, 56)
                                .addComponent(updatememSingleRadioButton)))
                        .addGap(41, 41, 41))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(updatememBirthDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(updatemembirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(updatememAddress, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatememFirstNameTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                            .addComponent(updatememPhoneNumberTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updatememHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updatememLastNameTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(updatemememailAddress)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatememLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatememFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatememPhoneNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatememHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatememAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatemememailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updatememfemaleRadioButton)
                        .addComponent(updatememmaleRadioButton)
                        .addComponent(gender2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gender3))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updatememSingleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updatememMarriedRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatemembirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updatememBirthDayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(updatememberdataSavebutton)
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout updateMemberRegPanelLayout = new javax.swing.GroupLayout(updateMemberRegPanel);
        updateMemberRegPanel.setLayout(updateMemberRegPanelLayout);
        updateMemberRegPanelLayout.setHorizontalGroup(
            updateMemberRegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMemberRegPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );
        updateMemberRegPanelLayout.setVerticalGroup(
            updateMemberRegPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateMemberRegPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BackgroundPanelLayout = new javax.swing.GroupLayout(BackgroundPanel);
        BackgroundPanel.setLayout(BackgroundPanelLayout);
        BackgroundPanelLayout.setHorizontalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMemberRegPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 965, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AllAreaMembersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ViewAreamemberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(updateMemberRegPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundPanelLayout.setVerticalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMemberRegPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AllAreaMembersPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ViewAreamemberPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(updateMemberRegPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MembershipHomepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MembershipHomepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void membershipBackbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membershipBackbuttonActionPerformed
        // TODO add your handling code here:
     front.updatePanel(home);
    }//GEN-LAST:event_membershipBackbuttonActionPerformed

    private void NewMemberLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewMemberLabelMouseClicked
        // TODO add your handling code here:
          BackgroundPanel.removeAll();
          w.NewupdatePanel(NewMemberRegPanel); 
          NewMemberRegPanel.setVisible(true);
//        NewupdatePanel(NewMemberRegPanel);
    }//GEN-LAST:event_NewMemberLabelMouseClicked

    private void ViewMemberLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewMemberLabelMouseClicked
        // TODO add your handling code here:
//        SubPanelUpdater w = new SubPanelUpdater(this);
          BackgroundPanel.removeAll();
          ViewAreamemberPanel.setVisible(true);
          w.NewupdatePanel(ViewAreamemberPanel);
//        ViewAreamemberPanel.setVisible(true);
//        NewupdatePanel(ViewAreamemberPanel);
    }//GEN-LAST:event_ViewMemberLabelMouseClicked

    private void AllMemberLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllMemberLabelMouseClicked
        // TODO add your handling code here:
         
          HashMap<String, String[]>objMap = db.getAllMemberList();
          TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
          AllAreaMembersPanel.setVisible(true);
          NewupdatePanel(AllAreaMembersPanel);
          memberbirthdayCombobox.setVisible(true);
          tbup.populateallMemberTable(objMap);
          viewAllmemberLabel.setText("All members");
    }//GEN-LAST:event_AllMemberLabelMouseClicked

    private void NewMemberSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewMemberSaveButtonActionPerformed
        // TODO add your handling code here:
        String mStatus,newmemgender;
        if (memmaleRadioButton.isSelected()){newmemgender = "Male"; }
            else {newmemgender = "Female";}
        if (memSingleRadioButton.isSelected()){mStatus = "Single"; }
            else {mStatus = "Married"; }
        String Month = null ;
        int month = membirthMonthChooser.getMonth();
        switch (month) {
            case 0:
                Month="January";
                break;
            case 1:
                Month="February";
                break;
            case 2:
                Month="March";
                break;
            case 3:
                Month="April";
                break;
            case 4:
                Month="May";
                break;
            case 5:
                Month="June";
                break;
            case 6:
                Month="July";
                break;
            case 7:
                Month="August";
                break;
            case 8:
                Month="September";
                break;
            case 9:
                Month="October";
                break;
            case 10:
                Month="November";
                break;
            case 11:
                Month="December";
                break;
            default:
        }
        int day = memBirthDayChooser.getDay();
        String firstname = memFirstNameTf.getText();
        String lastname = memLastNameTf.getText();
        String phone = memPhoneNumberTF.getText();
        String addr = memAddress.getText();
        String mail = mememailAddress.getText();
        String cell  = memHomeCellJurisdiction.getText();       
        String dob = Month + " " + (String.valueOf(day));
         
        Date mvpp,basicc,matt,encc,dlii;
        if(!validated(firstname, lastname, phone,mail, addr, mStatus, cell, newmemgender,dob)){JOptionPane.showMessageDialog(this, "Please Fill in all Compulsory Spaces");}
            else{       
                SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
                mvpp = memMvpDateChooser.getDate();
                String mvpdate = sFormat.format(mvpp);
                String mvp = MonthConverter(mvpdate);
                
                String basic;
                basicc = memdcabasicDateChooser.getDate();
                if(basicc!=null){basic = sFormat.format(basicc);}
                   else{ basic = " ";}

                String mat;
                matt = memdcamaturityDateChooser.getDate();
                if(matt!=null){ mat = sFormat.format(matt);}
                   else{ mat = " ";}

                String enc;
                encc = memencounterDateChooser.getDate();
                if(encc!=null){enc = sFormat.format(encc);}
                   else{enc= " ";}

                String dli;
                dlii = memdliDateChooser.getDate();
                if(dlii!=null){dli = sFormat.format(dlii);}
                   else{dli= " ";}
               
        if(!" ".equals(dli)) {db.NewMembersave(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp, basic, mat, enc, dli); }
        else if (!" ".equals(mat)&&!" ".equals(enc)){db.NewMembersave0(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp, basic, mat, enc);}
        else if (!" ".equals(mat)){db.NewMembersave1(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp, basic, mat);}
        else if (!" ".equals(basic)){db.NewMembersave2(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp, basic);}
        else if (!" ".equals(enc)){db.NewMembersave4(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp, enc);}
        else if(" ".equals(basic)&& " ".equals(mat)&& " ".equals(enc)&& " ".equals(dli)){db.NewMembersave3(firstname,lastname, phone,mail, addr, cell, newmemgender, mStatus,  dob, mvp);}
       
        memAddress.setText("");
        memFirstNameTf.setText("");
        memLastNameTf.setText("");
        memHomeCellJurisdiction.setText("");
        memPhoneNumberTF.setText("");
        memdliDateChooser.setDate(null);
        memMvpDateChooser.setDate(null);
        membirthMonthChooser.setMonth(0);
        memBirthDayChooser.setDay(0);
        memdcabasicDateChooser.setDate(null);
        memdcamaturityDateChooser.setDate(null);
        memencounterDateChooser.setDate(null);     
    }
    }//GEN-LAST:event_NewMemberSaveButtonActionPerformed

    private String MonthConverter(String dates)
{
  String mont = dates.substring(5, 7);String Months=null;String year = dates.substring(0,4);String days = dates.substring(9,10);
                int monte = Integer.parseInt(mont);
                int months = Integer.parseInt(mont.substring(1));
                        if(months==1){Months="January";}
                        else if(months==2){Months="February";}
                        else if(months==3){Months="March";}
                        else if(months==4){Months="April";}
                        else if(months==5){Months="May";}
                        else if(months==6){Months="June";}
                        else if(months==7){Months="July";}
                        else if(months==8){Months="August";}
                        else if(months==9){Months="September";}
                        else if(monte==10){Months="October";}
                        else if(monte==11){Months="November";}
                        else if(monte==12){Months="December";}
                String date = year+" "+ Months + " " + days ; 
                return date;
}
    private void viewMemberSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMemberSearchButtonActionPerformed
        // TODO add your handling code here:
                                    memtexterrorlabelLabel.setText(" ");
        if(memfnamesearchRadioButton.isSelected())
        {
                HashMap<String, String[]> objMap =  db.getamemberfnRecord(memfnamesearchTF.getText());
                if (objMap.isEmpty())
                {
                    memfnameerrorlabel.setText("Enter the Correct First Name");
                    memfnameerrorimage.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else{
                   TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOnememberTable(objMap); }
        }
        else if (memphnumsearchRadioButton.isSelected())
        {
                   HashMap<String, String[]> objMap =  db.getamemberphRecord(memphnumsearchTF.getText());
                if (objMap.isEmpty())
                {
                    memphnumerrorlabel.setText("Enter the Correct Phone Number");
                    memphnumerrorimage.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else{
                   TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOnememberTable(objMap); } 
        }
        else if (memlnamesearchRadioButton.isSelected())
        {
                 HashMap<String, String[]> objMap =  db.getamemberlnRecord(memlnamesearchTF.getText());
                if (objMap.isEmpty())
                {
                    memlnameerrorlabel.setText("Enter the Correct Last Name");
                    memlnameerrorimage.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else{
                   TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOnememberTable(objMap); }  
        }
    }//GEN-LAST:event_viewMemberSearchButtonActionPerformed

    private void memphnumsearchTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_memphnumsearchTFFocusGained
        // TODO add your handling code here:
        memphnumerrorlabel.setText(" ");
        memphnumerrorimage.setIcon(null);
        memphnumsearchTF.setText(null);
    }//GEN-LAST:event_memphnumsearchTFFocusGained

    private void memfnamesearchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_memfnamesearchTFFocusLost
        // TODO add your handling code here:
        memfnameerrorlabel.setText(" ");
        memfnameerrorimage.setIcon(null);
        memFirstNameTf.setText(null);
    }//GEN-LAST:event_memfnamesearchTFFocusLost

    private void memlnamesearchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_memlnamesearchTFFocusLost
        // TODO add your handling code here:
        memlnameerrorlabel.setText(" ");
        memlnameerrorimage.setIcon(null);
        memLastNameTf.setText(null);
    }//GEN-LAST:event_memlnamesearchTFFocusLost

    private void viewmemComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewmemComboBoxActionPerformed
        // TODO add your handling code here:
        int count = ViewareamemberTable.getRowCount();
if(count == 0){memtexterrorlabelLabel.setText("Please search for a member first");}
    
else
{      String ph = (String) ViewareamemberTable.getValueAt(0,3);
       Map <String, String> rrt = db.moveMemArc(ph);
       this.rt = rrt;
       String comsel = (String) viewmemComboBox.getSelectedItem();
 
  if(null != comsel )
            switch (comsel) {
                case "Update Bio-Data":
                    BackgroundPanel.removeAll();
                    w.NewupdatePanel(updateMemberRegPanel);
                    updateMemberRegPanel.setVisible(true);
                    editMemNOTETextArea.setVisible(false);
                    EditmembertSaveNOTEButton.setVisible(false);
                    memdataScrollPane.setVisible(false);
                    break;
                case "Make Follow-Up Note":
                    editMemNOTETextArea.setText("");
                    editMemNOTETextArea.setVisible(true);
                    EditmembertSaveNOTEButton.setVisible(true);
                    memdataScrollPane.setVisible(true);
                    break;
                case "Move To Archive":
                    editMemNOTETextArea.setVisible(false);
                    EditmembertSaveNOTEButton.setVisible(false);
                    memdataScrollPane.setVisible(false);
                    db.moveMemArc(ph);
                    System.out.println(ph);
                    String fn =rrt.get("fn");
                    String ln=rrt.get("ln");
                    String gen=rrt.get("gen");
                    String pho=rrt.get("ph");
                    String cell=rrt.get("cell");
                    String addr=rrt.get("addr");
                    String sec=rrt.get("2nd");
                    String mvp =rrt.get("1st");
                    String dli=rrt.get("dli");
                    String dept=rrt.get("dept");
                    String note=rrt.get("fol");
                    String id =rrt.get("id");
                    String mari=rrt.get("mari");
                    String dca=rrt.get("dca");
                    String mat=rrt.get("mat");
                    String enc=rrt.get("enc");
                    String dob=rrt.get("dob");
                    String mail=rrt.get("mail");
                    if(sec == null)
                    {
                        JOptionPane.showMessageDialog(front, "Please Date of Second Visit must be Inputted");
                    }
                    else if(note == null)
                    {
                        JOptionPane.showMessageDialog(front, "Please Make a follow up note on Member before Moving to archive");
                    }
                    else
                    {
                        db.moveNdel(fn, ln,gen, pho,mail, cell, addr, sec, mvp,id,mari,dob,dca,mat,enc,dli,dept,note);
                    }
                    break;
                case "View Follow-Up Note":
                    editMemNOTETextArea.setVisible(true);
                    memdataScrollPane.setVisible(true);
                    editMemNOTETextArea.setText(rrt.get("fol"));
                    break;
                default:
            }
 }
    }//GEN-LAST:event_viewmemComboBoxActionPerformed

    private void EditmembertSaveNOTEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditmembertSaveNOTEButtonActionPerformed
        // TODO add your handling code here:
        String ph = (String) ViewareamemberTable.getValueAt(0,3);
        String Prenote = (String) ViewareamemberTable.getValueAt(0,16);
        String note = editMemNOTETextArea.getText();
        db.InsertmemNote(note,ph,Prenote);
        editMemNOTETextArea.setText("");
    }//GEN-LAST:event_EditmembertSaveNOTEButtonActionPerformed

    private void updatememberdataSavebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatememberdataSavebuttonActionPerformed
        // TODO add your handling code here:
 String nufn = null,numail=null,nuln = null,nucell = null,nudob = null,nugen = null,numari = null,nuaddr = null,nuph = null,upfirstname,uplastname,upphone,upmail,upaddr,upcell,updob,upgender,upmStatus;
 String ph = (String) ViewareamemberTable.getValueAt(0,3);
       Map <String, String> rtt = db.moveMemArc(ph);
       this.rt = rtt;      
        
       if (updatememmaleRadioButton.isSelected()){upgender = "Male"; }
           else {upgender = "Female";}
        
       if (updatememSingleRadioButton.isSelected()){upmStatus = "Single"; }
           else {upmStatus = "Married";}
       
        String Month = null ;
        int month = updatemembirthMonthChooser.getMonth();
        switch (month) {
            case 0:
                Month="January";
                break;
            case 1:
                Month="February";
                break;
            case 2:
                Month="March";
                break;
            case 3:
                Month="April";
                break;
            case 4:
                Month="May";
                break;
            case 5:
                Month="June";
                break;
            case 6:
                Month="July";
                break;
            case 7:
                Month="August";
                break;
            case 8:
                Month="September";
                break;
            case 9:
                Month="October";
                break;
            case 10:
                Month="November";
                break;
            case 11:
                Month="December";
                break;
            default:
        }
        int day = updatememBirthDayChooser.getDay();
        
        
        upfirstname = updatememFirstNameTf.getText();uplastname = updatememLastNameTf.getText();upphone = updatememPhoneNumberTF.getText();
        upaddr = updatememAddress.getText();upmail = updatemememailAddress.getText();upcell  = updatememHomeCellJurisdiction.getText();updob = Month + " " + (String.valueOf(day));
        
        String fn =rtt.get("fn");String ln=rtt.get("ln"); String gen=rtt.get("gen"); String pho=rtt.get("ph"); String cell=rtt.get("cell");
        String addr=rtt.get("addr");String dob=rtt.get("dob");String mari=rtt.get("mari");String id = rtt.get("id");String mail = rtt.get("mail");
        
   if(!validated(upfirstname,uplastname,upphone,upmail,upaddr,upmStatus,upcell,upgender,updob)){JOptionPane.showMessageDialog(this,"Please Fill in all Compulsory Spaces and Selections");}
          else{       
                if (!upfirstname.equals(fn)){nufn =upfirstname;}
                if(!uplastname.equals(ln)){nuln = uplastname;}
                if(!upgender.equals(gen)){nugen = upgender;}
                if(!upphone.equals(ph)){nuph = upphone;}
                if(!upmail.equals(mail)){numail = upmail;}
                if(!upaddr.equals(addr)){nuaddr = upaddr;}
                if(!upmStatus.equals(mari)){numari = upmStatus;}
                if(!upcell.equals(cell)){nucell = upcell;}
                if(!updob.equals(dob)){nudob = updob;}
         
                db.updatememdata(nufn,nuln,nugen,nuph,numail,nuaddr,numari,nucell,nudob,id);
                
                BackgroundPanel.removeAll();
                ViewAreamemberPanel.setVisible(true);
                w.NewupdatePanel(ViewAreamemberPanel);
              }   
    }//GEN-LAST:event_updatememberdataSavebuttonActionPerformed

    private void memberbirthdayComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberbirthdayComboboxActionPerformed
        // TODO add your handling code here:
          HashMap<String, String[]>objMap = null;
          String mon;
          TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
          String birth = (String)memberbirthdayCombobox.getSelectedItem();
          
        if(null != birth){
             switch (birth) {
                    case "January":
                    {   mon = "January";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for January");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }  
                        break; }
                    case "February":
                    {   mon = "February";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                         viewAllmemberLabel.setText("Birthday Celebrants for February");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }  
                        break; }
                    case "March":
                    {   mon = "March";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for March");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }
                        break; }
                    case "April":
                    {   mon = "April";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for April");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }
                        break; }
                    case "May":
                    {   mon = "May";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for May");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     } 
                            break; } 
                    case "June":
                    {   mon = "June";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for June");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }   
                        break;   }
                    case "July":
                    {   mon = "July";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for July");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                      
                        break;     }
                    case "August":
                    {   mon = "August";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                         viewAllmemberLabel.setText("Birthday Celebrants for August");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                     
                        break;    }
                    case "September":
                    {   mon = "September";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                         viewAllmemberLabel.setText("Birthday Celebrants for September");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                    
                        break;   }
                    case "October":
                    {   mon = "October";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                         viewAllmemberLabel.setText("Birthday Celebrants for October");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                     
                        break;    }
                    case "November":
                    {   mon = "November";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for November");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                    
                        break;     }
                    case "December":
                    {   mon = "December";
                        objMap = db.birthmonth(mon);
                        tbup.populateallMemberTable(objMap);
                        viewAllmemberLabel.setText("Birthday Celebrants for December");
                         if(objMap.isEmpty())
                     {
                         JOptionPane.showMessageDialog(null, "No Celebrant For the Month");
                     }                     
                        break;    }
                    default: 
        } }
    }//GEN-LAST:event_memberbirthdayComboboxActionPerformed

    private void ArchievedMemberLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ArchievedMemberLabelMouseClicked
        // TODO add your handling code here:
          HashMap<String, String[]>objMap = db.getArchievedMemberList();
          TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
          AllAreaMembersPanel.setVisible(true);
          NewupdatePanel(AllAreaMembersPanel);
          tbup.populateallMemberTable(objMap);
          memberbirthdayCombobox.setVisible(false);
    }//GEN-LAST:event_ArchievedMemberLabelMouseClicked

    private void NewMemberLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewMemberLabelMouseEntered
        // TODO add your handling code here:
            Cursor handCursor = new Cursor (Cursor.HAND_CURSOR);
            Object obj = evt.getSource();
            JLabel lb = (JLabel) obj;
            lb.setCursor(handCursor);
    }//GEN-LAST:event_NewMemberLabelMouseEntered

    private void sendmessageComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendmessageComboboxActionPerformed
        // TODO add your handling code here:
        String gen = (String)sendmessageCombobox.getSelectedItem();
         switch(gen)
         {
   
            case "Generate Email(s)":
                {       
                w.getemails("Always delete File After Use before generating another Contact.");
                w.getemails("\t" + viewAllmemberLabel.getText());
                    int count = AllareamemberTable.getRowCount();
                    for (int i=0; i<count; i++)
                    {
                    String email = (String) AllareamemberTable.getValueAt(i,4);
                    w.getemails(email);
                    }
                    JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                    break;
                }
           case "Generate Phone Number(s)":
                {
                w.getNumber("Always delete File After Use before generating another Contact.");
                w.getNumber("\t" + viewAllmemberLabel.getText());
                    int count = AllareamemberTable.getRowCount();
                    for (int i=0; i<count; i++)
                    {
                     String ph = (String) AllareamemberTable.getValueAt(i,3);
                     w.getNumber(ph);
                    } 
                    JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                    break;
                }
             case "Generate Number with name":
                {
                    w.getNumber("Always delete File After Use before generating another Contact List.");
                    w.getNumber("\t" + viewAllmemberLabel.getText());
                    int count = AllareamemberTable.getRowCount();
                    for (int i=0; i<count; i++)
                    {
                        String ph = (String) AllareamemberTable.getValueAt(i,3);
                        String fn = (String) AllareamemberTable.getValueAt(i,1);
                        String ln = (String) AllareamemberTable.getValueAt(i,2);
                        w.getNumber(fn + "  " + ln + "\t" + "\t"  + ph);
                    }
                    JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                    break;
                }
                case "Generate Email with name":
                {
                    w.getNumber("Always delete File After Use before generating another Contact List.");
                    w.getNumber("\t" + viewAllmemberLabel.getText());
                    int count = AllareamemberTable.getRowCount();
                    for (int i=0; i<count; i++)
                    {
                        String email = (String) AllareamemberTable.getValueAt(i,4);
                        String fn = (String) AllareamemberTable.getValueAt(i,1);
                        String ln = (String) AllareamemberTable.getValueAt(i,2);
                        w.getemails(fn + "  " + ln + "\t" + "\t"  + email);
                    }
                    JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                    break;
                }

           default: 
         }
    }//GEN-LAST:event_sendmessageComboboxActionPerformed
private boolean 
    validated(String firstname, String lastname, String phone,String mail, String addr, String mStatus, String cell, String gender, String dob)
      {
        if(firstname.isEmpty()||lastname.isEmpty()||phone.isEmpty()||mail.isEmpty()||cell.isEmpty()||addr.isEmpty()||gender.isEmpty()||dob.isEmpty())
        {
            return false;
        }
         return true;
      }
public JTable getViewareamemberTable() {
        return ViewareamemberTable;}
public JTable getAllareamemberTable() {
        return AllareamemberTable;}
public JPanel getBackgroundPanel() {
        return BackgroundPanel;}
public void NewupdatePanel (JPanel currentPanel)
{
BackgroundPanel.removeAll();   
GroupLayout l = (GroupLayout) BackgroundPanel.getLayout();   
l.setHorizontalGroup(
    l.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(currentPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
);
l.setVerticalGroup(
    l.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(currentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AllAreaMembersPanel;
    private javax.swing.JLabel AllMemberLabel;
    private javax.swing.JTable AllareamemberTable;
    private javax.swing.JLabel ArchievedMemberLabel;
    private javax.swing.JPanel BackgroundPanel;
    private javax.swing.JButton EditmembertSaveNOTEButton;
    private javax.swing.JPanel MembershipHomepanel;
    private javax.swing.JLabel NewMemberLabel;
    private javax.swing.JPanel NewMemberRegPanel;
    private javax.swing.JButton NewMemberSaveButton;
    private javax.swing.JPanel ViewAreamemberPanel;
    private javax.swing.JLabel ViewMemberLabel;
    private javax.swing.JTable ViewareamemberTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTextArea editMemNOTETextArea;
    private javax.swing.JLabel entermemberNumberlabel2;
    private javax.swing.JLabel entermemberNumberlabel3;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel gender1;
    private javax.swing.JLabel gender2;
    private javax.swing.JLabel gender3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField memAddress;
    private com.toedter.calendar.JDayChooser memBirthDayChooser;
    private javax.swing.JTextField memFirstNameTf;
    private javax.swing.JTextField memHomeCellJurisdiction;
    private javax.swing.JTextField memLastNameTf;
    private javax.swing.JRadioButton memMarriedRadioButton;
    private com.toedter.calendar.JDateChooser memMvpDateChooser;
    private javax.swing.JTextField memPhoneNumberTF;
    private javax.swing.JRadioButton memSingleRadioButton;
    private javax.swing.JComboBox memberbirthdayCombobox;
    private javax.swing.JButton membershipBackbutton;
    private com.toedter.calendar.JMonthChooser membirthMonthChooser;
    private javax.swing.JScrollPane memdataScrollPane;
    private com.toedter.calendar.JDateChooser memdcabasicDateChooser;
    private com.toedter.calendar.JDateChooser memdcamaturityDateChooser;
    private com.toedter.calendar.JDateChooser memdliDateChooser;
    private javax.swing.JTextField mememailAddress;
    private com.toedter.calendar.JDateChooser memencounterDateChooser;
    private javax.swing.JRadioButton memfemaleRadioButton;
    private javax.swing.JLabel memfnameerrorimage;
    private javax.swing.JLabel memfnameerrorlabel;
    private javax.swing.JRadioButton memfnamesearchRadioButton;
    private javax.swing.JTextField memfnamesearchTF;
    private javax.swing.JLabel memlnameerrorimage;
    private javax.swing.JLabel memlnameerrorlabel;
    private javax.swing.JRadioButton memlnamesearchRadioButton;
    private javax.swing.JTextField memlnamesearchTF;
    private javax.swing.JRadioButton memmaleRadioButton;
    private javax.swing.JLabel memphnumerrorimage;
    private javax.swing.JLabel memphnumerrorlabel;
    private javax.swing.JRadioButton memphnumsearchRadioButton;
    private javax.swing.JTextField memphnumsearchTF;
    private javax.swing.JLabel memtexterrorlabelLabel;
    private javax.swing.JComboBox sendmessageCombobox;
    private javax.swing.JPanel updateMemberRegPanel;
    private javax.swing.JTextField updatememAddress;
    private com.toedter.calendar.JDayChooser updatememBirthDayChooser;
    private javax.swing.JTextField updatememFirstNameTf;
    private javax.swing.JTextField updatememHomeCellJurisdiction;
    private javax.swing.JTextField updatememLastNameTf;
    private javax.swing.JRadioButton updatememMarriedRadioButton;
    private javax.swing.JTextField updatememPhoneNumberTF;
    private javax.swing.JRadioButton updatememSingleRadioButton;
    private javax.swing.JButton updatememberdataSavebutton;
    private com.toedter.calendar.JMonthChooser updatemembirthMonthChooser;
    private javax.swing.JTextField updatemememailAddress;
    private javax.swing.JRadioButton updatememfemaleRadioButton;
    private javax.swing.JRadioButton updatememmaleRadioButton;
    private javax.swing.JLabel viewAllmemberLabel;
    private javax.swing.JButton viewMemberSearchButton;
    private javax.swing.JComboBox viewmemComboBox;
    // End of variables declaration//GEN-END:variables

}
