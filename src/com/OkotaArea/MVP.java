/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.OkotaArea;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import org.jdesktop.swingx.prompt.PromptSupport;

/**
 *
 * @author chinex
 */
public class MVP extends javax.swing.JPanel {

    /**
     * Creates new form MVP
     */
 private final HomeFront front; 
 private final HomePanel  home;
 DBOperations db = new DBOperations();
 SubPanelUpdater m = new SubPanelUpdater(this);
 public static String id,marital,mail,dob1,genda,mvpdat,secdate,note;
 //String word=null;
 private String mon;//Map <String, String> rst;
    public MVP(HomeFront front, HomePanel  home) {
        initComponents();
        this.front = front;
        this.home = home;
        mvpfollowUpCombobox.setVisible(false);
        NewMVPregPanel.setVisible(false);
        AllMVPPanel.setVisible(false);
        ViewMVPPanel.setVisible(false);
        EditMVPdetailsPanel.setVisible(false);
        editMvpNOTETextArea.setVisible(false);
        EditmvpSaveNOTEButton.setVisible(false);
        editmvpnotedataScrollPane.setVisible(false);
        textCustomise("Enter First Name", mvpFirstNameTf);
        textCustomise("Enter Last Name", mvpLastNameTf);
        textCustomise("Enter Phone Number ", mvpPhoneNumberTF);
        textCustomise("Enter Cell Jurisdiction", mvpHomeCellJurisdiction);
        textCustomise("Enter Address", mvpAddress);
        textCustomise("Enter Email Address", mvpemailAddress);
        textCustomise("ENTER MVP'S FIRST NAME", EnterMVPfnamesearchTF);
        textCustomise("ENTER MVP'S LAST NAME", EnterMVPlnamesearchTF);
        textCustomise("ENTER MVP'S PHONE NUMBER", EnterMVPnumbersearchTF);
    }
private void textCustomise(String text, JTextField component)
    {
        PromptSupport.setPrompt(text, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.HIDE_PROMPT, component);
        PromptSupport.setFocusBehavior(PromptSupport.FocusBehavior.SHOW_PROMPT, component);
        PromptSupport.setFontStyle(Font.BOLD, component);
        PromptSupport.setForeground(Color.darkGray, component);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        MVPHomePanel = new javax.swing.JPanel();
        mvpBackbutton = new javax.swing.JButton();
        AllMvpLabel = new javax.swing.JLabel();
        ViewMvpLabel = new javax.swing.JLabel();
        NewMvpLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        BackgroundPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        NewMVPregPanel = new javax.swing.JPanel();
        mvpFirstNameTf = new javax.swing.JTextField();
        mvpLastNameTf = new javax.swing.JTextField();
        mvpPhoneNumberTF = new javax.swing.JTextField();
        mvpHomeCellJurisdiction = new javax.swing.JTextField();
        mvpAddress = new javax.swing.JTextField();
        gender = new javax.swing.JLabel();
        mvpmaleRadioButton = new javax.swing.JRadioButton();
        mvpfemaleRadioButton = new javax.swing.JRadioButton();
        gender1 = new javax.swing.JLabel();
        mvpMarriedRadioButton = new javax.swing.JRadioButton();
        mvpSingleRadioButton = new javax.swing.JRadioButton();
        mvpsecondDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        mvpbirthdayChooser = new com.toedter.calendar.JDayChooser();
        mvpbirthMonthChooser = new com.toedter.calendar.JMonthChooser();
        jLabel5 = new javax.swing.JLabel();
        mvpfirstDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        NewMvprSaveButton = new javax.swing.JButton();
        mvpthirdDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        mvpemailAddress = new javax.swing.JTextField();
        ViewMVPPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        ViewmvpTable = new javax.swing.JTable();
        SearchmvpButton = new javax.swing.JButton();
        mvpfnameerrorlabel = new javax.swing.JLabel();
        EnterMVPfnamesearchTF = new javax.swing.JTextField();
        EnterMVPnumbersearchTF = new javax.swing.JTextField();
        entermemberNumberlabel2 = new javax.swing.JLabel();
        mvpNumbererrorlabel = new javax.swing.JLabel();
        mvperrorimagenumber = new javax.swing.JLabel();
        mvperrorimagefname = new javax.swing.JLabel();
        mvpsearchnumberRadioButton = new javax.swing.JRadioButton();
        mvpsearchRadioButton = new javax.swing.JRadioButton();
        mvpsearchlnameRadioButton = new javax.swing.JRadioButton();
        EnterMVPlnamesearchTF = new javax.swing.JTextField();
        mvperrorimagelnamelabel = new javax.swing.JLabel();
        mvplnameerrorlabel = new javax.swing.JLabel();
        entermemberNumberlabel3 = new javax.swing.JLabel();
        editmvpnotedataScrollPane = new javax.swing.JScrollPane();
        editMvpNOTETextArea = new javax.swing.JTextArea();
        EditmvpSaveNOTEButton = new javax.swing.JButton();
        mvptexterrorlabelLabel = new javax.swing.JLabel();
        editMvpCombo = new javax.swing.JComboBox();
        AllMVPPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        allmvpTable = new javax.swing.JTable();
        mvp1stMonthCombobox = new javax.swing.JComboBox();
        mvpfollowUpCombobox = new javax.swing.JComboBox();
        sendmessageCombobox = new javax.swing.JComboBox();
        viewAllmvpLabel = new javax.swing.JLabel();
        EditMVPdetailsPanel = new javax.swing.JPanel();
        editmvpFirstNameTf = new javax.swing.JTextField();
        editmvpLastNameTf = new javax.swing.JTextField();
        editmvpPhoneNumberTF = new javax.swing.JTextField();
        editmvpHomeCellJurisdiction = new javax.swing.JTextField();
        editmvpAddress = new javax.swing.JTextField();
        editmvpsecondDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        editMvpSaveButton = new javax.swing.JButton();
        editmvpthirdDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        editmvpemailaddress = new javax.swing.JTextField();

        setBackground(new java.awt.Color(146, 198, 227));

        mvpBackbutton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        mvpBackbutton.setText("BACK");
        mvpBackbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mvpBackbuttonActionPerformed(evt);
            }
        });

        AllMvpLabel.setBackground(new java.awt.Color(51, 51, 51));
        AllMvpLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        AllMvpLabel.setForeground(new java.awt.Color(51, 51, 51));
        AllMvpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AllMvpLabel.setText("All Mvp");
        AllMvpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllMvpLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMvpLabelMouseEntered(evt);
            }
        });

        ViewMvpLabel.setBackground(new java.awt.Color(51, 51, 51));
        ViewMvpLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        ViewMvpLabel.setForeground(new java.awt.Color(51, 51, 51));
        ViewMvpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ViewMvpLabel.setText("View Mvp");
        ViewMvpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewMvpLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMvpLabelMouseEntered(evt);
            }
        });

        NewMvpLabel.setBackground(new java.awt.Color(51, 51, 51));
        NewMvpLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        NewMvpLabel.setForeground(new java.awt.Color(51, 51, 51));
        NewMvpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NewMvpLabel.setText("New Mvp");
        NewMvpLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewMvpLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                NewMvpLabelMouseEntered(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/OkotaArea/logo smallsma.png"))); // NOI18N
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout MVPHomePanelLayout = new javax.swing.GroupLayout(MVPHomePanel);
        MVPHomePanel.setLayout(MVPHomePanelLayout);
        MVPHomePanelLayout.setHorizontalGroup(
            MVPHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMvpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MVPHomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MVPHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MVPHomePanelLayout.createSequentialGroup()
                        .addComponent(ViewMvpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MVPHomePanelLayout.createSequentialGroup()
                        .addComponent(AllMvpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(MVPHomePanelLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MVPHomePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mvpBackbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        MVPHomePanelLayout.setVerticalGroup(
            MVPHomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MVPHomePanelLayout.createSequentialGroup()
                .addContainerGap(105, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NewMvpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ViewMvpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AllMvpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(mvpBackbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );

        BackgroundPanel.setBackground(new java.awt.Color(146, 198, 227));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/OkotaArea/DC Wallpaper101.png"))); // NOI18N

        mvpFirstNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        mvpLastNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        mvpPhoneNumberTF.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        mvpHomeCellJurisdiction.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        mvpAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        gender.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender.setText("Gender");

        mvpmaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(mvpmaleRadioButton);
        mvpmaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpmaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        mvpmaleRadioButton.setText("Male");

        mvpfemaleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(mvpfemaleRadioButton);
        mvpfemaleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpfemaleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        mvpfemaleRadioButton.setText("Female");

        gender1.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        gender1.setText("Marital Status");

        mvpMarriedRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(mvpMarriedRadioButton);
        mvpMarriedRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpMarriedRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        mvpMarriedRadioButton.setText("Married");
        mvpMarriedRadioButton.setToolTipText("");

        mvpSingleRadioButton.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup2.add(mvpSingleRadioButton);
        mvpSingleRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpSingleRadioButton.setForeground(new java.awt.Color(102, 102, 102));
        mvpSingleRadioButton.setText("Single");
        mvpSingleRadioButton.setToolTipText("");

        mvpsecondDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel4.setText("ENTER SECOND VISIT DATE");

        jLabel5.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel5.setText("BIRTHDAY");

        mvpfirstDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel6.setText("ENTER FIRST VISIT DATE");

        NewMvprSaveButton.setBackground(new java.awt.Color(51, 51, 51));
        NewMvprSaveButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        NewMvprSaveButton.setForeground(new java.awt.Color(204, 204, 204));
        NewMvprSaveButton.setText("SAVE");
        NewMvprSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewMvprSaveButtonActionPerformed(evt);
            }
        });

        mvpthirdDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel7.setText("ENTER  THIRD VISIT DATE");

        mvpemailAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        javax.swing.GroupLayout NewMVPregPanelLayout = new javax.swing.GroupLayout(NewMVPregPanel);
        NewMVPregPanel.setLayout(NewMVPregPanelLayout);
        NewMVPregPanelLayout.setHorizontalGroup(
            NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mvpfirstDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(mvpsecondDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mvpthirdDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                .addComponent(gender)
                                .addGap(51, 51, 51)
                                .addComponent(mvpmaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(mvpfemaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(gender1)
                                .addGap(30, 30, 30)
                                .addComponent(mvpMarriedRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(mvpSingleRadioButton))
                            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(mvpAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mvpFirstNameTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                                    .addComponent(mvpPhoneNumberTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                                .addGap(56, 56, 56)
                                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mvpHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mvpLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mvpemailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                                .addComponent(mvpbirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(mvpbirthdayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(NewMvprSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)))))
                .addContainerGap(375, Short.MAX_VALUE))
        );
        NewMVPregPanelLayout.setVerticalGroup(
            NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mvpFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mvpHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpPhoneNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mvpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpemailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpmaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpfemaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpMarriedRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpSingleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mvpfirstDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpsecondDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mvpthirdDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(NewMVPregPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mvpbirthMonthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mvpbirthdayChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(NewMVPregPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(NewMvprSaveButton)))
                .addGap(102, 102, 102))
        );

        ViewmvpTable.setBackground(new java.awt.Color(51, 51, 51));
        ViewmvpTable.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        ViewmvpTable.setForeground(new java.awt.Color(255, 255, 255));
        ViewmvpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Phone No", "Email", "Address", "Cell Jurisdiction", "Gender", "Marital Status", "Birthday", "Mvp date", "2nd Time", "3rd Time", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(ViewmvpTable);

        SearchmvpButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        SearchmvpButton.setText("SEARCH");
        SearchmvpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchmvpButtonActionPerformed(evt);
            }
        });

        mvpfnameerrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        EnterMVPfnamesearchTF.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        EnterMVPfnamesearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EnterMVPfnamesearchTFFocusLost(evt);
            }
        });

        EnterMVPnumbersearchTF.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        EnterMVPnumbersearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EnterMVPnumbersearchTFFocusLost(evt);
            }
        });

        entermemberNumberlabel2.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        entermemberNumberlabel2.setText("OR");

        mvpNumbererrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        mvperrorimagenumber.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        mvperrorimagefname.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        buttonGroup3.add(mvpsearchnumberRadioButton);
        mvpsearchnumberRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpsearchnumberRadioButton.setText("Search with MVP Phone Number");

        buttonGroup3.add(mvpsearchRadioButton);
        mvpsearchRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpsearchRadioButton.setText("Search with MVP 's First Name");

        buttonGroup3.add(mvpsearchlnameRadioButton);
        mvpsearchlnameRadioButton.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        mvpsearchlnameRadioButton.setText("Search with MVP 's Last Name");

        EnterMVPlnamesearchTF.setFont(new java.awt.Font("Bell MT", 1, 14)); // NOI18N
        EnterMVPlnamesearchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                EnterMVPlnamesearchTFFocusLost(evt);
            }
        });

        mvperrorimagelnamelabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        mvplnameerrorlabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N

        entermemberNumberlabel3.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        entermemberNumberlabel3.setText("OR");

        editMvpNOTETextArea.setColumns(10);
        editMvpNOTETextArea.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        editMvpNOTETextArea.setRows(3);
        editMvpNOTETextArea.setTabSize(2);
        editmvpnotedataScrollPane.setViewportView(editMvpNOTETextArea);

        EditmvpSaveNOTEButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        EditmvpSaveNOTEButton.setText("SAVE");
        EditmvpSaveNOTEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditmvpSaveNOTEButtonActionPerformed(evt);
            }
        });

        mvptexterrorlabelLabel.setFont(new java.awt.Font("Bell MT", 1, 18)); // NOI18N
        mvptexterrorlabelLabel.setForeground(new java.awt.Color(255, 51, 51));

        editMvpCombo.setFont(new java.awt.Font("Bell MT", 1, 32)); // NOI18N
        editMvpCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Update", "Make Note", "View Note" }));
        editMvpCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMvpComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewMVPPanelLayout = new javax.swing.GroupLayout(ViewMVPPanel);
        ViewMVPPanel.setLayout(ViewMVPPanelLayout);
        ViewMVPPanelLayout.setHorizontalGroup(
            ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8)
            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                .addComponent(mvpsearchRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(entermemberNumberlabel2))
                            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                .addComponent(EnterMVPfnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mvperrorimagefname, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mvpfnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                        .addComponent(EnterMVPnumbersearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 123, Short.MAX_VALUE))
                                    .addComponent(mvpNumbererrorlabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                .addGap(0, 294, Short.MAX_VALUE)
                                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                        .addComponent(mvperrorimagenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32))
                                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                                        .addComponent(mvpsearchnumberRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(entermemberNumberlabel3)
                                        .addGap(47, 47, 47)))))
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mvplnameerrorlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewMVPPanelLayout.createSequentialGroup()
                                .addComponent(EnterMVPlnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mvperrorimagelnamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mvpsearchlnameRadioButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewMVPPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SearchmvpButton)
                        .addGap(98, 98, 98))))
            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EditmvpSaveNOTEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editmvpnotedataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewMVPPanelLayout.createSequentialGroup()
                        .addComponent(mvptexterrorlabelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewMVPPanelLayout.createSequentialGroup()
                        .addComponent(editMvpCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        ViewMVPPanelLayout.setVerticalGroup(
            ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mvpsearchRadioButton)
                    .addComponent(mvpsearchnumberRadioButton)
                    .addComponent(mvpsearchlnameRadioButton)
                    .addComponent(entermemberNumberlabel3)
                    .addComponent(entermemberNumberlabel2))
                .addGap(33, 33, 33)
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mvperrorimagefname, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EnterMVPfnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mvpfnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(mvperrorimagenumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EnterMVPnumbersearchTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(EnterMVPlnamesearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mvperrorimagelnamelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mvpNumbererrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mvplnameerrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchmvpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewMVPPanelLayout.createSequentialGroup()
                        .addComponent(editMvpCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mvptexterrorlabelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(editmvpnotedataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(EditmvpSaveNOTEButton)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        allmvpTable.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        allmvpTable.setForeground(new java.awt.Color(51, 51, 51));
        allmvpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Phone No", "Email", "Address", "Cell Jurisdiction", "Gender", "Marital Status", "Birthday", "Mvp date", "2nd Time", "3rd Time", "Note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(allmvpTable);

        mvp1stMonthCombobox.setBackground(new java.awt.Color(204, 204, 204));
        mvp1stMonthCombobox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        mvp1stMonthCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MVP for the Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        mvp1stMonthCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mvp1stMonthComboboxActionPerformed(evt);
            }
        });

        mvpfollowUpCombobox.setBackground(new java.awt.Color(204, 204, 204));
        mvpfollowUpCombobox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        mvpfollowUpCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Returned MVP", "New Member", "DCA Basic", "DCA Maturity", "Encounter", "DLI", "Workforce" }));
        mvpfollowUpCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mvpfollowUpComboboxActionPerformed(evt);
            }
        });

        sendmessageCombobox.setBackground(new java.awt.Color(204, 204, 204));
        sendmessageCombobox.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        sendmessageCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Generate Contact Details", "Generate Email(s)", "Generate Phone Number(s)", "Generate Number with name", "Generate Email with name", " " }));
        sendmessageCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendmessageComboboxActionPerformed(evt);
            }
        });

        viewAllmvpLabel.setFont(new java.awt.Font("Bell MT", 1, 36)); // NOI18N
        viewAllmvpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout AllMVPPanelLayout = new javax.swing.GroupLayout(AllMVPPanel);
        AllMVPPanel.setLayout(AllMVPPanelLayout);
        AllMVPPanelLayout.setHorizontalGroup(
            AllMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllMVPPanelLayout.createSequentialGroup()
                .addContainerGap(318, Short.MAX_VALUE)
                .addGroup(AllMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllMVPPanelLayout.createSequentialGroup()
                        .addComponent(mvpfollowUpCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllMVPPanelLayout.createSequentialGroup()
                        .addComponent(viewAllmvpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(285, 285, 285))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AllMVPPanelLayout.createSequentialGroup()
                        .addComponent(sendmessageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mvp1stMonthCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        AllMVPPanelLayout.setVerticalGroup(
            AllMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AllMVPPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(viewAllmvpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AllMVPPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mvp1stMonthCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendmessageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(mvpfollowUpCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(177, Short.MAX_VALUE))
        );

        editmvpFirstNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        editmvpLastNameTf.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        editmvpPhoneNumberTF.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        editmvpHomeCellJurisdiction.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        editmvpAddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        editmvpsecondDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel8.setText("ENTER SECOND VISIT DATE");

        editMvpSaveButton.setBackground(new java.awt.Color(51, 51, 51));
        editMvpSaveButton.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N
        editMvpSaveButton.setForeground(new java.awt.Color(204, 204, 204));
        editMvpSaveButton.setText("SAVE");
        editMvpSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMvpSaveButtonActionPerformed(evt);
            }
        });

        editmvpthirdDateChooser.setFont(new java.awt.Font("Bell MT", 1, 24)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Bell MT", 1, 15)); // NOI18N
        jLabel11.setText("ENTER  THIRD VISIT DATE");

        editmvpemailaddress.setFont(new java.awt.Font("Bell MT", 1, 20)); // NOI18N

        javax.swing.GroupLayout EditMVPdetailsPanelLayout = new javax.swing.GroupLayout(EditMVPdetailsPanel);
        EditMVPdetailsPanel.setLayout(EditMVPdetailsPanelLayout);
        EditMVPdetailsPanelLayout.setHorizontalGroup(
            EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                        .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editmvpsecondDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(editmvpthirdDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                        .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                                .addGap(388, 388, 388)
                                .addComponent(editMvpSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(editmvpAddress, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editmvpFirstNameTf, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                                    .addComponent(editmvpPhoneNumberTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
                                .addGap(56, 56, 56)
                                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editmvpHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editmvpLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editmvpemailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(375, Short.MAX_VALUE))))
        );
        EditMVPdetailsPanelLayout.setVerticalGroup(
            EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EditMVPdetailsPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editmvpFirstNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editmvpLastNameTf, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editmvpHomeCellJurisdiction, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editmvpPhoneNumberTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editmvpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editmvpemailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EditMVPdetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editmvpsecondDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editmvpthirdDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(149, 149, 149)
                .addComponent(editMvpSaveButton)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout BackgroundPanelLayout = new javax.swing.GroupLayout(BackgroundPanel);
        BackgroundPanel.setLayout(BackgroundPanelLayout);
        BackgroundPanelLayout.setHorizontalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMVPregPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1281, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ViewMVPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AllMVPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(EditMVPdetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        BackgroundPanelLayout.setVerticalGroup(
            BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NewMVPregPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(ViewMVPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(AllMVPPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(BackgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(EditMVPdetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(MVPHomePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MVPHomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BackgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mvpBackbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mvpBackbuttonActionPerformed
        // TODO add your handling code here:
        front.updatePanel(home);
    }//GEN-LAST:event_mvpBackbuttonActionPerformed

    private void NewMvpLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewMvpLabelMouseClicked
        // TODO add your handling code here:
       NewupdatePanel(NewMVPregPanel);
       NewMVPregPanel.setVisible(true); 
       
    }//GEN-LAST:event_NewMvpLabelMouseClicked

    private void ViewMvpLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewMvpLabelMouseClicked
        // TODO add your handling code here:
       NewupdatePanel(ViewMVPPanel);
       ViewMVPPanel.setVisible(true); 
    }//GEN-LAST:event_ViewMvpLabelMouseClicked

    private void AllMvpLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllMvpLabelMouseClicked
        // TODO add your handling code here:
       HashMap<String, String[]> objMap = db.getAllMvpList();
       TabularRecordUpdater tbu = new TabularRecordUpdater(objMap,this);
       NewupdatePanel(AllMVPPanel);
       AllMVPPanel.setVisible(true); 
       tbu.populateallMvpTable(objMap);
       
    }//GEN-LAST:event_AllMvpLabelMouseClicked

    private void NewMvprSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewMvprSaveButtonActionPerformed
        // TODO add your handling code here:
        String mStatus,newmvpgender;
        if (mvpmaleRadioButton.isSelected()){newmvpgender = "Male"; }
            else {newmvpgender = "Female";}
        if (mvpSingleRadioButton.isSelected()){mStatus = "Single"; }
            else {mStatus = "Married"; }
        String Month = null ;
        int month = mvpbirthMonthChooser.getMonth();
     switch (month) {
         case 0:
             Month="January";
             break;
         case 1:
             Month="February";
             break;
         case 2:
             Month="March";
             break;
         case 3:
             Month="April";
             break;
         case 4:
             Month="May";
             break;
         case 5:
             Month="June";
             break;
         case 6:
             Month="July";
             break;
         case 7:
             Month="August";
             break;
         case 8:
             Month="September";
             break;
         case 9:
             Month="October";
             break;
         case 10:
             Month="November";
             break;
         case 11:
             Month="December";
             break;
         default:
     }
        int day = mvpbirthdayChooser.getDay();
        String firstname = mvpFirstNameTf.getText();
        String lastname = mvpLastNameTf.getText();
        String phone = mvpPhoneNumberTF.getText();
        String addr = mvpAddress.getText();
        String mails = mvpemailAddress.getText();
        String cell  = mvpHomeCellJurisdiction.getText();       
        String dob = Month + " " + (String.valueOf(day));
        Date mvppp,sec,tedd;
        if(!validated(firstname,lastname, phone,mails, addr, mStatus, cell, newmvpgender,dob)){JOptionPane.showMessageDialog(this, "Please Fill in all Compulsory Spaces");}
            else{       
                SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
                mvppp = mvpfirstDateChooser.getDate();
                String mvpp = sFormat.format(mvppp);
                String mont = mvpp.substring(5, 7);String Months=null;String year = mvpp.substring(0,4);String days = mvpp.substring(9,10);
                int monte = Integer.parseInt(mont);
                
                int months = Integer.parseInt(mont.substring(1));
                        if(months==1){Months="January";}
                        else if(months==2){Months="February";}
                        else if(months==3){Months="March";}
                        else if(months==4){Months="April";}
                        else if(months==5){Months="May";}
                        else if(months==6){Months="June";}
                        else if(months==7){Months="July";}
                        else if(months==8){Months="August";}
                        else if(months==9){Months="September";}
                        else if(monte==10){Months="October";}
                        else if(monte==11){Months="November";}
                        else if(monte==12){Months="December";}
                String mvp = year+" "+ Months + " " + days ;
                String second;
                sec = mvpsecondDateChooser.getDate();
                if(sec!=null){second = sFormat.format(sec);}
                   else{ second = " ";}
                
                 String ted;
                tedd = mvpthirdDateChooser.getDate();
                if(tedd!=null){ted = sFormat.format(tedd);}
                   else{ ted = " ";}
                 
                if(!" ".equals(ted)){db.NewMvpsave2(firstname,lastname, phone,mails, addr, cell, newmvpgender, mStatus,  dob, mvp,second,ted);}
                else if(!" ".equals(second)){db.NewMvpsave1(firstname,lastname, phone, mails,addr, cell, newmvpgender, mStatus,dob, mvp,second);}
                   else {db.NewMvpsave(firstname,lastname, phone, mails,addr, cell, newmvpgender, mStatus,  dob, mvp);}
        
        mvpAddress.setText("");
        mvpemailAddress.setText("");
        mvpFirstNameTf.setText("");
        mvpLastNameTf.setText("");
        mvpHomeCellJurisdiction.setText("");
        mvpPhoneNumberTF.setText("");
        mvpsecondDateChooser.setDate(null);
        mvpfirstDateChooser.setDate(null);
        mvpbirthMonthChooser.setMonth(0);
        mvpbirthdayChooser.setDay(0);
        mvpthirdDateChooser.setDate(null);
        }  
    }//GEN-LAST:event_NewMvprSaveButtonActionPerformed

    private void SearchmvpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchmvpButtonActionPerformed
        // TODO add your handling code here:
       
        if (mvpsearchRadioButton.isSelected())
        {
                String name = EnterMVPfnamesearchTF.getText();
                HashMap<String, String[]> objMap =  db.getAnMVPRecordfname(name);
                 if (objMap.isEmpty())
                {
                    mvpfnameerrorlabel.setText("Please Enter the Correct Full Name");
                    mvperrorimagefname.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else
                 {
                    TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOneMvpTable(objMap); }
          }
        else if(mvpsearchnumberRadioButton.isSelected())
          {
                String num = EnterMVPnumbersearchTF.getText();
                HashMap<String, String[]> objMap =  db.getAnMVPRecordnum(num);
                 if (objMap.isEmpty())
                {
                    mvpNumbererrorlabel.setText("Please Enter the Correct Phone Number");
                    mvperrorimagenumber.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else{
                   TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOneMvpTable(objMap); }
            }
        else if (mvpsearchlnameRadioButton.isSelected())
        {
                String name = EnterMVPlnamesearchTF.getText();
                HashMap<String, String[]> objMap =  db.getAnMVPRecordlname(name);
                 if (objMap.isEmpty())
                {
                    mvplnameerrorlabel.setText("Please Enter the Correct Full Name");
                    mvperrorimagelnamelabel.setIcon(new javax.swing.ImageIcon("images/badsign.png"));
                }
                else
                 {
                   TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
                   tbup.populateOneMvpTable(objMap); }
          }
    }//GEN-LAST:event_SearchmvpButtonActionPerformed

    private void EnterMVPfnamesearchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EnterMVPfnamesearchTFFocusLost
        // TODO add your handling code here:
            mvpfnameerrorlabel.setText(" ");
            mvperrorimagefname.setIcon(null);
           // EnterMVPnamesearchTF.setText(null);
    }//GEN-LAST:event_EnterMVPfnamesearchTFFocusLost

    private void EnterMVPnumbersearchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EnterMVPnumbersearchTFFocusLost
        // TODO add your handling code here:
        mvpNumbererrorlabel.setText(" ");
        mvperrorimagenumber.setIcon(null);
        //EnterMVPnumbersearchTF.setText(null);
    }//GEN-LAST:event_EnterMVPnumbersearchTFFocusLost

    private void EnterMVPlnamesearchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EnterMVPlnamesearchTFFocusLost
        // TODO add your handling code here:
        mvplnameerrorlabel.setText(" ");
        mvperrorimagelnamelabel.setIcon(null);
    }//GEN-LAST:event_EnterMVPlnamesearchTFFocusLost

    private void editMvpSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMvpSaveButtonActionPerformed
        // TODO add your handling code here:
        String firstname = editmvpFirstNameTf.getText();
        String lastname = editmvpLastNameTf.getText();
        String phone = editmvpPhoneNumberTF.getText();
        String addr = editmvpAddress.getText();
        String email = editmvpemailaddress.getText();
        String cell  = editmvpHomeCellJurisdiction.getText();
        
                String second,ted;
                SimpleDateFormat sFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date secs = editmvpsecondDateChooser.getDate();
                    if(secs!=null){second = sFormat.format(secs);}
                       else{ second = " ";}
                Date tedds = editmvpthirdDateChooser.getDate();
                    if(tedds!=null){ted = sFormat.format(tedds);}
                       else{ ted = " ";}
                    if(!" ".equals(ted) && " ".equals(second)){db.EditNewMvpsave2(firstname,lastname, phone,email, addr, cell,secdate,ted,id,genda,marital,dob1,mvpdat);}
                    else if (!" ".equals(ted)&& !" ".equals(second)){db.EditNewMvpsave(firstname,lastname, phone,email, addr, cell,second,ted,id,genda,marital,dob1,mvpdat);}
                    else if(!" ".equals(second)){db.EditNewMvpsave1(firstname,lastname, phone,email, addr, cell,second,id);}  

        editmvpAddress.setText("");
        editmvpemailaddress.setText("");
        editmvpFirstNameTf.setText("");
        editmvpLastNameTf.setText("");
        editmvpHomeCellJurisdiction.setText("");
        editmvpPhoneNumberTF.setText("");
        editmvpsecondDateChooser.setDate(null);
        editmvpthirdDateChooser.setDate(null);
        
         NewupdatePanel(ViewMVPPanel);
         ViewMVPPanel.setVisible(true);
        
    }//GEN-LAST:event_editMvpSaveButtonActionPerformed

    private void mvp1stMonthComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mvp1stMonthComboboxActionPerformed
        // TODO add your handling code here:
        HashMap<String, String[]>objMap = null; String mvpfirstmon;
        TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
               
        String birth = (String)mvp1stMonthCombobox.getSelectedItem();
        if(null != birth){
            switch (birth) {
                case "January":
                {   mvpfirstmon = "January";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of January");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break; }
                case "February":
                {   mvpfirstmon = "February";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of February");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break; }
                case "March":
                {   mvpfirstmon = "March";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of March");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break; }
                case "April":
                {   mvpfirstmon = "April";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of April");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break; }
                case "May":
                {   mvpfirstmon = "May";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of May");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break; }
                case "June":
                {   mvpfirstmon = "June";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of June");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;   }
                case "July":
                {   mvpfirstmon = "July";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of July");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;     }
                case "August":
                {   mvpfirstmon = "August";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of August");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;    }
                case "September":
                {   mvpfirstmon = "September";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of September");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;   }
                case "October":
                {   mvpfirstmon = "October";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of October");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;    }
                case "November":
                {   mvpfirstmon = "November";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of November");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;     }
                case "December":
                {   mvpfirstmon = "December";
                    this.mon = mvpfirstmon;
                    objMap = db.getmonthMvpDetails(mvpfirstmon);
                    tbup.populateallMvpTable(objMap);
                    viewAllmvpLabel.setText("All MVP(s) For the Month of December");
                    if(objMap.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "No MVP For the Month");
                    }
                    break;    }
                default:
            } }
      
        mvpfollowUpCombobox.setVisible(true);
    }//GEN-LAST:event_mvp1stMonthComboboxActionPerformed

    private void EditmvpSaveNOTEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditmvpSaveNOTEButtonActionPerformed
        // TODO add your handling code here:
        String ph = (String) ViewmvpTable.getValueAt(0,3);
        String Prenote = (String) ViewmvpTable.getValueAt(0,13);
        String newnote = editMvpNOTETextArea.getText();
        db.InsertmvpNote(newnote,ph,Prenote);
        editMvpNOTETextArea.setText("");
    }//GEN-LAST:event_EditmvpSaveNOTEButtonActionPerformed

    private void editMvpComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMvpComboActionPerformed
        // TODO add your handling code here:
        int count = ViewmvpTable.getRowCount(); ViewmvpTable.setRowSelectionAllowed(true);
    if(count == 0){mvptexterrorlabelLabel.setText("Please search for a member first");}
       
    else  
    {
    String comsel = (String) editMvpCombo.getSelectedItem();
      if(   null != comsel)
            switch (comsel) {
                case "Update":{
                    int row = ViewmvpTable.getSelectedRow();
                    String word = (String) ViewmvpTable.getValueAt(row, 0);
                    System.out.println(word);
                    Map <String, String> rst = db.getMvpDetails(word);
                    NewupdatePanel(EditMVPdetailsPanel);
                    EditMVPdetailsPanel.setVisible(true);
                    String fname =rst.get("firstName");
                    String lname =rst.get("lastName");
                    String cell =rst.get("cell");
                    String address=rst.get("address");
                    genda =rst.get("gender");
                    marital =rst.get("marital");
                    dob1 =rst.get("dob");
                    String email =rst.get("mail");
                    mvpdat =rst.get("1stdate");
                    secdate =rst.get("2nddate");
                    note = rst.get("note");
                    String trddate=rst.get("3rddate");
                    id =rst.get("id");
                    String fone =rst.get("phone");
                    editmvpAddress.setText(address);
                    editmvpemailaddress.setText(email);
                    editmvpFirstNameTf.setText(fname);
                    editmvpHomeCellJurisdiction.setText(cell);
                    editmvpLastNameTf.setText(lname);
                    editmvpPhoneNumberTF.setText(fone);
                        break;
                    }
                case "View Note":{
                    EditmvpSaveNOTEButton.setVisible(true);
                    editMvpNOTETextArea.setVisible(true);
                    EditmvpSaveNOTEButton.hide();
                    editmvpnotedataScrollPane.setVisible(true);
                    int row = ViewmvpTable.getSelectedRow();
                    String word = (String) ViewmvpTable.getValueAt(row, 0);
                    Map <String, String> rst = db.getMvpDetails(word);
                    editMvpNOTETextArea.setText(rst.get("note"));
                        break;
                    }
                case "Make Note":
                    editMvpNOTETextArea.setVisible(true);
                    EditmvpSaveNOTEButton.setVisible(true);
                    editmvpnotedataScrollPane.setVisible(true);
                    editMvpNOTETextArea.setText("");
                    EditmvpSaveNOTEButton.enable();
                    break;
                default:
            }
  
    }
    }//GEN-LAST:event_editMvpComboActionPerformed

    private void mvpfollowUpComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mvpfollowUpComboboxActionPerformed
        // TODO add your handling code here:
        String follo = (String) mvpfollowUpCombobox.getSelectedItem();
        HashMap<String, String[]>objMap = null; TabularRecordUpdater tbup = new TabularRecordUpdater(objMap,this);
        if (null!=follo)
        switch (follo) {
         case "Returned MVP":
             objMap = db.getmonthsecTimerDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All Second Timers For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No Second Timer For the Month");
             }
             break;
         case "New Member":
             objMap = db.getmonthThirdTimerDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All New Members For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New Membership For the Month");
             }
             break;
         case "DCA Basic":
             objMap = db.getmonthBasicDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All New Member attened DCA Basic For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New attened DCA basic For the Month");
             }
             break;
         case "DCA Maturity":
             objMap = db.getmonthmatDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All New Member attened Maturity For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New attened DCA Maturity For the Month");
             }
             break;
         case "Encounter":
             objMap = db.getmonthEncDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All New Member attened Encounter For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New attened Encounter For the Month");
             }
             break;
         case "DLI":
             objMap = db.getmonthDLIDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All New Member attened DLI For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New Member attened DLI For the Month");
             }
             break;
         case "Workforce":
             objMap = db.getmonthWorkDetails(this.mon);
             tbup.populateallMvpTable(objMap);
             viewAllmvpLabel.setText("All Newly Joined Workforce For the Month");
             if(objMap.isEmpty())
             {
                 JOptionPane.showMessageDialog(null, "No New Member Joined Workforce For the Month");
             }
             break;
         default:
     }
    }//GEN-LAST:event_mvpfollowUpComboboxActionPerformed

    private void NewMvpLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewMvpLabelMouseEntered
        // TODO add your handling code here:
            Cursor handCursor = new Cursor (Cursor.HAND_CURSOR);
            Object obj = evt.getSource();
            JLabel lb = (JLabel) obj;
            lb.setCursor(handCursor);
    }//GEN-LAST:event_NewMvpLabelMouseEntered

    private void sendmessageComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendmessageComboboxActionPerformed
        // TODO add your handling code here:
        String gen = (String)sendmessageCombobox.getSelectedItem();
        switch(gen)
        {

            case "Generate Email(s)":
            {
                m.getemails("Always delete File After Use before generating another Contact List.");
                m.getemails("\t" + viewAllmvpLabel.getText());
                int count = allmvpTable.getRowCount();
                for (int i=0; i<count; i++)
                {
                    String email = (String) allmvpTable.getValueAt(i,4);
                    m.getemails(email);
                }
                JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                break;
            }
            case "Generate Phone Number(s)":
            {
                m.getNumber("Always delete File After Use before generating another Contact List.");
                m.getNumber("\t" + viewAllmvpLabel.getText());
                int count = allmvpTable.getRowCount();
                for (int i=0; i<count; i++)
                {
                    String ph = (String) allmvpTable.getValueAt(i,3);
                    m.getNumber(ph);
                }
                JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                break;
            }
            case "Generate Number with name":
            {
                m.getNumber("Always delete File After Use before generating another Contact List.");
                m.getNumber("\t" + viewAllmvpLabel.getText());
                int count = allmvpTable.getRowCount();
                for (int i=0; i<count; i++)
                {
                    String ph = (String) allmvpTable.getValueAt(i,3);
                    String fn = (String) allmvpTable.getValueAt(i,1);
                    String ln = (String) allmvpTable.getValueAt(i,2);
                    m.getNumber(fn + "  " + ln + "\t"+ "\t" + ph);
                }
                JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                break;
            }
            case "Generate Email with name":
            {
                m.getNumber("Always delete File After Use before generating another Contact List.");
                m.getNumber("\t" + viewAllmvpLabel.getText());
                int count = allmvpTable.getRowCount();
                for (int i=0; i<count; i++)
                {
                    String email = (String) allmvpTable.getValueAt(i,4);
                    String fn = (String) allmvpTable.getValueAt(i,1);
                    String ln = (String) allmvpTable.getValueAt(i,2);
                    m.getemails(fn + "  " + ln + "\t"+ "\t" + email);
                }
                JOptionPane.showMessageDialog(front, "Generated Sucessfully");
                break;
            }

            default:
        }
    }//GEN-LAST:event_sendmessageComboboxActionPerformed
private boolean 
    validated(String firstname,String lastname, String phone,String mail, String addr, String mStatus, String cell, String gender,String dob)
      {
        if( firstname.isEmpty()||lastname.isEmpty()||phone.isEmpty()||mail.isEmpty()||cell.isEmpty()||addr.isEmpty()||gender.isEmpty()||dob.isEmpty())
        {
            return false;
        }
         return true;
      }

    public JTable getViewmvpTable() {
        return ViewmvpTable;
    }

    public JTable getAllmvpTable() {
        return allmvpTable;
    }
    
public void NewupdatePanel (JPanel currentPanel)
    {
        BackgroundPanel.removeAll();   
        GroupLayout l = (GroupLayout) BackgroundPanel.getLayout();   
        l.setHorizontalGroup(
            l.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        l.setVerticalGroup(
            l.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(currentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AllMVPPanel;
    private javax.swing.JLabel AllMvpLabel;
    private javax.swing.JPanel BackgroundPanel;
    private javax.swing.JPanel EditMVPdetailsPanel;
    private javax.swing.JButton EditmvpSaveNOTEButton;
    private javax.swing.JTextField EnterMVPfnamesearchTF;
    private javax.swing.JTextField EnterMVPlnamesearchTF;
    private javax.swing.JTextField EnterMVPnumbersearchTF;
    private javax.swing.JPanel MVPHomePanel;
    private javax.swing.JPanel NewMVPregPanel;
    private javax.swing.JLabel NewMvpLabel;
    private javax.swing.JButton NewMvprSaveButton;
    private javax.swing.JButton SearchmvpButton;
    private javax.swing.JPanel ViewMVPPanel;
    private javax.swing.JLabel ViewMvpLabel;
    private javax.swing.JTable ViewmvpTable;
    private javax.swing.JTable allmvpTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox editMvpCombo;
    private javax.swing.JTextArea editMvpNOTETextArea;
    private javax.swing.JButton editMvpSaveButton;
    private javax.swing.JTextField editmvpAddress;
    private javax.swing.JTextField editmvpFirstNameTf;
    private javax.swing.JTextField editmvpHomeCellJurisdiction;
    private javax.swing.JTextField editmvpLastNameTf;
    private javax.swing.JTextField editmvpPhoneNumberTF;
    private javax.swing.JTextField editmvpemailaddress;
    private javax.swing.JScrollPane editmvpnotedataScrollPane;
    private com.toedter.calendar.JDateChooser editmvpsecondDateChooser;
    private com.toedter.calendar.JDateChooser editmvpthirdDateChooser;
    private javax.swing.JLabel entermemberNumberlabel2;
    private javax.swing.JLabel entermemberNumberlabel3;
    private javax.swing.JLabel gender;
    private javax.swing.JLabel gender1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JComboBox mvp1stMonthCombobox;
    private javax.swing.JTextField mvpAddress;
    private javax.swing.JButton mvpBackbutton;
    private javax.swing.JTextField mvpFirstNameTf;
    private javax.swing.JTextField mvpHomeCellJurisdiction;
    private javax.swing.JTextField mvpLastNameTf;
    private javax.swing.JRadioButton mvpMarriedRadioButton;
    private javax.swing.JLabel mvpNumbererrorlabel;
    private javax.swing.JTextField mvpPhoneNumberTF;
    private javax.swing.JRadioButton mvpSingleRadioButton;
    private com.toedter.calendar.JMonthChooser mvpbirthMonthChooser;
    private com.toedter.calendar.JDayChooser mvpbirthdayChooser;
    private javax.swing.JTextField mvpemailAddress;
    private javax.swing.JLabel mvperrorimagefname;
    private javax.swing.JLabel mvperrorimagelnamelabel;
    private javax.swing.JLabel mvperrorimagenumber;
    private javax.swing.JRadioButton mvpfemaleRadioButton;
    private com.toedter.calendar.JDateChooser mvpfirstDateChooser;
    private javax.swing.JLabel mvpfnameerrorlabel;
    private javax.swing.JComboBox mvpfollowUpCombobox;
    private javax.swing.JLabel mvplnameerrorlabel;
    private javax.swing.JRadioButton mvpmaleRadioButton;
    private javax.swing.JRadioButton mvpsearchRadioButton;
    private javax.swing.JRadioButton mvpsearchlnameRadioButton;
    private javax.swing.JRadioButton mvpsearchnumberRadioButton;
    private com.toedter.calendar.JDateChooser mvpsecondDateChooser;
    private javax.swing.JLabel mvptexterrorlabelLabel;
    private com.toedter.calendar.JDateChooser mvpthirdDateChooser;
    private javax.swing.JComboBox sendmessageCombobox;
    private javax.swing.JLabel viewAllmvpLabel;
    // End of variables declaration//GEN-END:variables
}
